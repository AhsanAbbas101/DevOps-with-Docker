

services:

  backend:
    image: web-service-backend
    build: ./example-backend
    ports:
      - 8080:8080
    environment:
      # backend env
      - PORT=8080
      - REQUEST_ORIGIN=http://127.0.0.1:5000
      # redis env
      - REDIS_HOST=redisdb
      # postgres env
      - POSTGRES_HOST=postgresdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    depends_on:
      - redisdb
      - postgresdb
      
  frontend:
    image: web-service-frontend
    build: ./example-frontend
    ports:
      - 5000:5000
    environment:
      - REACT_APP_BACKEND_URL=http://127.0.0.1:8080

  redisdb:
    image: redis

  postgresdb:
    image: postgres:17.2-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
    container_name: postgres_db
    volumes:
      - ./database:/var/lib/postgresql/data

  proxy:
    image: nginx
    restart: unless-stopped
    container_name: nginx-proxy
    volumes:
      - ./example-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    depends_on:
      - frontend
      - backend
    # note: i was using localhost in nginx.conf but got 502 bad gateway because localhost refered to the NGINX container itself, not the host machine. I replace localhost with service names for frontend and backend and it worked.